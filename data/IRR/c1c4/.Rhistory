install.packages("lmsqreg")
install.packages("lmsqreg", repos="http://R-Forge.R-project.org")
install.packages("VGAMdata")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("parody")
install.packages("moments")
install.packages("gamlss")
install.packages("knitr")
install.packages("qdap")
require("qdap")
devtools::install_github("cristinahg/OCAPIS/OCAPIS")
Sys.setenv(RSCALA_SCALA_VERSION='2.12')
rscala::scalaConfig(download='scala')
####Correlation check
require(irr)
require(tidyr)
require(ggplot2)
require(tidyverse)
##creating the training sets
setwd("/Users/fran/surfdrive/Documents/Projects/ThoughtRecordChatbot/Experiments/Exploratory_TRs/Documents/Analysis/Data/IRR/Psychologist2")
df.c1 <- read.csv("all_statements_coded_c1.csv", na.strings = "", header=FALSE, sep=";",fill=TRUE)
View(df.c1)
View(df.c1)
df.c1 <- read.csv("all_statements_coded_c1.csv", na.strings = "", header=TRUE, sep=";",fill=TRUE)
View(df.c1)
#set seed for random sampling
char2seed("Burger",set=TRUE)
require(TeachingDemos) #char2seed function
#set seed for random sampling
char2seed("Burger",set=TRUE)
require(dplyr) #for sampling
#set of first 50 statements for better understanding of instructions
df.subset_50_instructional <- sample_n(df.c1, 50)
#write to a file
write.table(df.subset_50_instructional,"training_50_instructional.csv",sep=";",row.names=FALSE)
